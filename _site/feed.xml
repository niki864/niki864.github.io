<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nikilesh Kumar</title>
    <description>Data Enthusiast &amp;#x2192; 21st Century Story-Teller</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 03 Apr 2018 13:01:41 -0400</pubDate>
    <lastBuildDate>Tue, 03 Apr 2018 13:01:41 -0400</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Chain Gun</title>
        <description>&lt;h2 id=&quot;chaingun---a-conceptual-blockchain-network-for-gun-ownership&quot;&gt;ChainGun - A conceptual blockchain network for gun ownership&lt;/h2&gt;

&lt;p&gt;There’s been a lot of talk about gun violence and calls for action against it in social media and through protests such as the &lt;strong&gt;March For Our Lives&lt;/strong&gt; movement and more. Hearing about it on a regular basis, I couldn’t help but wonder if there was something that could be done to support this cause. I did some digging around and found &lt;a href=&quot;http://www.businessinsider.com/heres-how-cops-actually-trace-a-gun-2016-8&quot;&gt;this article&lt;/a&gt; by the Business Insider. It’s pretty shocking to hear that even now, gun ownership records are not allowed to be stored in a searchable database. I find it really comical that an officer has to, literally, search though paper records and perform a trace. Hello, 18th Century!&lt;/p&gt;

&lt;p&gt;This project here is a manifestation of my desire to effect a change as well as my personal interest in blockchain tech. Here, I conceptualize a theoretical simple blockchain, implemented in Python, that could be used to track gun ownership and transfer of possession. I am following this excellent tutorial listed on hackernoon by &lt;a href=&quot;https://hackernoon.com/learn-blockchains-by-building-one-117428612f46&quot;&gt;Daniel van Flymen&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Most licensed firearms have a serial id. It is this ID that police and ATF officials use, to try and trace the manufacturer and purchase history of the gun. This entire project is based on the concept that each transaction can be encoded into a blockchain and hence, a distribute ledger, and that the transaction can be recorded by all nodes in the system.
Let me first define a few variables in this theoretical transaction system.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Owner - Person/Organization with a firearm for sale: e.g. Acme Firearms Inc.&lt;/li&gt;
  &lt;li&gt;Receiver - Person buying a firearm: e.g &lt;strong&gt;John Doe&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Amount - Monetary value paid by &lt;strong&gt;John Doe&lt;/strong&gt; for acquiring firearm from Owner&lt;/li&gt;
  &lt;li&gt;Gun_ID - Serial ID of firearm being sold.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Names can be substituted with some form of ID number for anonymity e.g. Firearms License Card ID Number&lt;/p&gt;

&lt;p&gt;Its quite self-explanatory. When John walks up to to Acme Inc. to buy himself a new pistol, he initiates a transaction. The transaction records all these details as one dictionary variable. Now, when John decides to sell his firearm, he becomes the owner and Jane Doe who’s buying his pistol becomes the receiver. Another, transaction is added to the chain.&lt;/p&gt;

&lt;p&gt;In these two theoretical transactions, we observe that we can preserve information regarding the gun serial ID while still tracking the movement of the gun from one hand to another.&lt;/p&gt;

&lt;p&gt;The ledger nature of a blockchain also allows for John, Jane and Acme to be simultaneously updated about the movement of the gun. Jane can trace the origins of the gun to Acme if necessary.&lt;/p&gt;

&lt;h2 id=&quot;packages-required&quot;&gt;Packages Required&lt;/h2&gt;

&lt;p&gt;This project was done in Python3&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Requests&lt;/li&gt;
  &lt;li&gt;Flask&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would also recommend using Postman over cURL for the HTTP client requests.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;A simple of understanding of blockchain basics and python programming is enough to make to implement this project. I would recommend the following guides for more knowledge on blockchain tech and the underlying priciples like Proof of Work, Hashing Algorithms and Network Consensus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://bitsonblocks.net/2015/09/09/a-gentle-introduction-to-blockchain-technology/&lt;/li&gt;
  &lt;li&gt;https://mlsdev.com/blog/156-how-to-build-your-own-blockchain-architecture&lt;/li&gt;
  &lt;li&gt;https://learncryptography.com/hash-functions/what-are-hash-functions&lt;/li&gt;
  &lt;li&gt;https://www.youtube.com/watch?v=9mNgeTA13Gc&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chaingun&quot;&gt;ChainGun&lt;/h2&gt;

&lt;p&gt;I will be explaining the crucial functions that make this program up&lt;/p&gt;

&lt;h3 id=&quot;chain-validity&quot;&gt;Chain Validity&lt;/h3&gt;

&lt;p&gt;This functions seeks to test the validity of the chain&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Chaingun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;valid_chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{last_block}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{block}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-----------&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# Check that the hash of the block is correct&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'previous_hash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

            &lt;span class=&quot;c&quot;&gt;# Check that the Proof of Work is correct&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid_proof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'proof'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'proof'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'previous_hash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here &lt;strong&gt;chain&lt;/strong&gt; is the current blockchain and the &lt;strong&gt;return&lt;/strong&gt; variable is boolean true or false denoting if the chain passed the validity tests.&lt;/p&gt;

&lt;h3 id=&quot;network-consensus&quot;&gt;Network Consensus&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;resolve_conflicts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;neighbours&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;new_chain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Look only for chains longer than current&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Find and verify the chains from all the nodes in network&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neighbours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://{node}/chain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'length'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'chain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

                &lt;span class=&quot;c&quot;&gt;# Check to see if length is longer than current and the chain is valid&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid_chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;new_chain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Replace our chain if we discovered a new, valid chain longer than ours&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_chain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_chain&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is the network consensus algorithm, it resolves conflicts by replacing our chain with the longest one in the network by checking all the other registered nodes.
Our logic here is that the longest chain in the network is the most valid chain.
We &lt;strong&gt;return&lt;/strong&gt; True if our chain was replaced, and False if not.&lt;/p&gt;

&lt;h3 id=&quot;transaction-and-hashing-function&quot;&gt;Transaction and Hashing Function&lt;/h3&gt;

&lt;p&gt;The transaction function is next. This contains all the information for our transaction.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receiver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gun_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_transactions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'owner'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'receiver'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receiver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'amount'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'gun_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gun_id&lt;/span&gt;
            
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Creates a new transaction thats queued for the next mined Block&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;owner: ID of the current gun owner&lt;/li&gt;
  &lt;li&gt;receiver: ID of the buyer&lt;/li&gt;
  &lt;li&gt;amount: Amount paid in the transaction&lt;/li&gt;
  &lt;li&gt;gun_id: Unique gun id for the gun that’s being transacted&lt;/li&gt;
  &lt;li&gt;return: The index of the Block that will hold this transaction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The hashing function takes all of this information, orders and encodes it performing a standard SHA-256 hash on it.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;block_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;proof-of-work-and-validation-of-pofw&quot;&gt;Proof of Work and Validation of PofW&lt;/h3&gt;
&lt;p&gt;Every blockchain network needs to have a proper proof of work system for the functioning of the system. Every time a new node is mined, this proof of work algo is what gives legitimacy to it. This PofW algo could be any mathematical equation or problem.
Simple Proof of Work Algorithm:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Find a number p’ such that hash(pp’) contains leading 4 zeroes&lt;/li&gt;
  &lt;li&gt;Where p is the previous proof, and p’ is the new proof&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;proof_of_work&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;last_proof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'proof'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;last_hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid_proof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_proof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;proof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proof&lt;/span&gt;

   &lt;span class=&quot;nd&quot;&gt;@staticmethod&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;valid_proof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_proof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{last_proof}{proof}{last_hash}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;guess_hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guess_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0000&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;demonstration&quot;&gt;Demonstration&lt;/h2&gt;

&lt;p&gt;Let’s try out how it works! Fire up Postman and do the following.&lt;/p&gt;

&lt;p&gt;Initializing: Send a GET request to &lt;code class=&quot;highlighter-rouge&quot;&gt;/mine&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37879823-861c293c-304c-11e8-946b-7221d57973f8.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make a new transaction using POST and filling out the transaction details in JSON. Keep owner as the hash id of receiver in previous block &lt;code class=&quot;highlighter-rouge&quot;&gt;/transactions/new&lt;/code&gt;. Mine again. You can add transactions and play around with this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37879822-8611d3d8-304c-11e8-8593-dadbcd8899b0.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Check out the addition in the chain using &lt;code class=&quot;highlighter-rouge&quot;&gt;/chain&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37879819-85f04916-304c-11e8-8681-af039f719d66.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Change port number from 5000 to 5001 and run another instance of &lt;code class=&quot;highlighter-rouge&quot;&gt;chaingun.py&lt;/code&gt;. Then in a POST request on your old node, register your new node.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37879818-85e62990-304c-11e8-9a14-96be1b35dcac.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Add Some transactions to your new node&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37879871-71dbc918-304d-11e8-8113-b0dd450c8e32.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Try merging using &lt;code class=&quot;highlighter-rouge&quot;&gt;nodes/resolve&lt;/code&gt; and see what you get!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37879817-85dc3dae-304c-11e8-96f9-e2bb891ae001.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Obviously, this is not even close to the actual complexity of a real block-chain network like Ethereum. But it was fun learning in depth into blockchain systems and to come up with a simple network that demostrated it. Play around with it on your own systems.&lt;/p&gt;

&lt;h2 id=&quot;common-issues&quot;&gt;Common Issues&lt;/h2&gt;

&lt;p&gt;I found that sometimes there were other processes that were still running and occupying ports in my system.
Run this on your CLI: &lt;code class=&quot;highlighter-rouge&quot;&gt;ps -fA | grep python&lt;/code&gt;
This will list the processes running on the port.&lt;/p&gt;

&lt;p&gt;You can kill them by entering the process number: &lt;code class=&quot;highlighter-rouge&quot;&gt;kill &amp;lt;processnumber&amp;gt;&lt;/code&gt;. Run chaingun.py after that.&lt;/p&gt;

&lt;h2 id=&quot;acknowledgments&quot;&gt;Acknowledgments&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;https://hackernoon.com/learn-blockchains-by-building-one-117428612f46&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;This project is licensed under the MIT License. See &lt;a href=&quot;https://github.com/niki864/ChainGun/blob/master/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/niki864/ChainGun&quot;&gt;Here’s the link to the full github repo&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 25 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/works/works-GunChain.html</link>
        <guid isPermaLink="true">http://localhost:4000/works/works-GunChain.html</guid>
        
        <category>Python</category>
        
        <category>Requests</category>
        
        <category>Flask</category>
        
        <category>hashlib</category>
        
        <category>json</category>
        
        
        <category>works</category>
        
      </item>
    
      <item>
        <title>Christmas and New Years in NYC</title>
        <description>&lt;section&gt;
&lt;h2&gt;The time I went to New York City in the peak of winter!&lt;/h2&gt;
&lt;p style=&quot;text-align: left&quot;&gt;There might very well be an entire section of people who would think that jumping off to NYC during Christmas/New Years is a pretty crazy thing to do. What with all the classic winter storms, blizzards and below freezing weather. But hey, I was travelling down from Boston and I thought well, if I can survive Boston, then NYC would be a peace of cake :). Besides, I was really excited to see how NYC would look with all the Christmas and New Years decorations in peak. I had a bunch of really good friends residing in nearby New Jersey and &lt;i&gt;their incessant demands&lt;/i&gt; that I turn up, also contributed to my decision to travel. Anyway, read on for my adventures and &lt;i&gt;hopefully I do justice to my amateur photography with this blog.&lt;/i&gt; &lt;/p&gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;section&gt;
&lt;h3&gt;First Stop : Times Square&lt;/h3&gt;
&lt;p style=&quot;text-align: left&quot;&gt;
	&lt;span class=&quot;image left&quot;&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/times1.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
		&lt;br&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/times2.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
	&lt;/span&gt;
	So after a gruelling 5 hour journey on a really shabby Greyhound bus, I reached the &lt;b&gt;Port Authority Bus Terminal&lt;/b&gt; in Midtown, Manhattan. This bus station IMO is a confusingly complicated maze with really poor placement of directions. But if you make it outside, you're right in the heart of Times Square.
	At this point, I need to credit &lt;i&gt;Sripathi&lt;/i&gt; for taking some of these amazing photos and also being there at the station to pick me up! Thanks bro!
&lt;/p&gt;
&lt;p style=&quot;text-align: left&quot;&gt;For the unaquainted, Times Square is every bit amazing as the images and movies depict it to be. Being present physically is like an assault on all the senses. The LED displays that cover your entire field of vision seem like they're all fighting to get your attention. Add to that the cacophany of sounds and smells coming from all directions. It really is an amazing feeling walking around in Times Square and I don't think my words do it any justice &lt;/p&gt;
&lt;p style=&quot;text-align: left&quot;&gt;It was two days before Christmas and hence, there were more tourists around and I think I spotted a choir group or two making their rounds. While I was walking around with Sripathi, taking in the sights and sound and listening to him explain all the landmarks he knew, I was also observing the people around me. I think I finally understood the idea of New York being a melting pot of cultures and people from different walks of life. There were street buskers, tour operators, tourist groups, push-cart vendors, police officers, kids snapping photos, shawarma stall operators and so much more. All of them, in their own way, trying to get a slice of the big apple and what it signifies about their dreams and aspirations.&lt;/p&gt;
&lt;p style=&quot;text-align: left&quot;&gt;My musings aside, my goal while being in NYC, was to go around and explore as much as possible in the limited time I had. One of the greatest &lt;b&gt;contradictions/challenges&lt;/b&gt; I face on a regular basis is having a sweet tooth and being on a &lt;b&gt;student budget&lt;/b&gt;. Times Square seeked to test my limits of endurance :P. From &lt;i&gt;Godiva&lt;/i&gt; to &lt;i&gt;Hershey's World&lt;/i&gt; to the &lt;i&gt;M and M's Factory&lt;/i&gt;, every few meters I walked, I ended up finding something new. I had to exercise restraint in spending at these places. We somehow made it to Sripathi's place without excessive damage to my wallet&lt;/p&gt;
&lt;/section&gt;
&lt;hr /&gt;
&lt;section style=&quot;text-align: left&quot;&gt;
&lt;h3&gt;Madison Square Gardens and Central Park&lt;/h3&gt;
&lt;p&gt;
	&lt;span class=&quot;image right&quot;&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/madison1.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
		&lt;br&gt;
	&lt;/span&gt;
We spent the next day exploring around some iconic place in Midtown. Being a basketball fan, I was really excited when I spotted &lt;i&gt;Madison Square Gardens&lt;/i&gt;, home of the New York Knicks. Naturally, it called for a photo and I even dragged Sripathi into it. You can clearly see how interested he was in taking a selfie...
Madison Square Gardens was impressive and the goal is to one-day watch a game there between the Knicks and Celtics :P. GO CELTICS!&lt;/p&gt;
&lt;p&gt;Speaking of going around, I found the grid system in New York really amazing. The idea of streets being numbered bottom-up east to west and cut by avenues numbered left-to-right running south to north seems like such a logical and simple way to organize a city. And if you get a hang of it, there's no way you can get lost in the city. The subway lines also follow a similar logic but honestly, the network is desperately due for an overhaul. Coming from Singapore, I guess I am just used to a more cleaner and well maintained public transit system.&lt;/p&gt;
&lt;div class=&quot;12u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/centralpark1.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;I'm gonna let the photo above do all the explaining for Central Park. It's just too beautiful. I would recommend visiting during sunrise or sunset for the best views. I went around trying to spot filming scenes from &lt;i&gt;Home Alone&lt;/i&gt; including the iconic Central Park tunnel where the kid runs through.&lt;/p&gt;
&lt;hr /&gt;
&lt;section style=&quot;text-align: left&quot;&gt;
&lt;h3&gt;Rockefeller Tree, NBC Studios Lane&lt;/h3&gt;
&lt;p&gt;
	&lt;div class=&quot;box alt&quot;&gt;
		&lt;div class=&quot;row uniform 100%&quot;&gt;
			&lt;div class=&quot;6u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/rockettes.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;6u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/jimmy.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
		&lt;/div&gt;
		&lt;br&gt;
	&lt;/div&gt;
	&lt;span class=&quot;image left&quot;&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/rocke.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
		&lt;br&gt;
	&lt;/span&gt;
After watching the sunset, we made our way from Central Park to the famed Rockefeller Tree and along the way we passed by the &lt;i&gt;Radio City Music Hall&lt;/i&gt;, home of the famed Radio City Rockettes on NBC Lane. I also spotted &lt;b&gt;Jimmy Fallon's Studio!&lt;/b&gt; And before you ask why we were just roaming around in the vicinity of Midtown, we were killing time waiting for a couple of friends to get off from work and join us. Didn't really want to wander off too far as the day was pretty tiring already.
&lt;br&gt;
&lt;br&gt;
TBH the Rockefeller Tree wasn't all that great after seeing all the other trees that were kept along the way. The tree sure was huge and the fact that it was a real spruce tree was probably the most impressive thing about it. I would have loved to skate at the ice-skating rink next to it but it was fully packed and wait time was like an hour. &lt;/p&gt;
&lt;hr /&gt;
&lt;/section&gt;
&lt;section style=&quot;text-align: left&quot;&gt;
&lt;h3&gt;Hell's Kitchen&lt;/h3&gt;
&lt;p&gt;
	&lt;span class=&quot;image right&quot;&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/hells1.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
		&lt;br&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/hells2.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
	&lt;/span&gt;
From the Rockefeller Tree we traced our steps back to Times Square where we met up with our friends. &lt;b&gt;Side Note: Applebee's is NOT your neighborhood grill and bar!! (in NYC at least).&lt;/b&gt; After some catching up, we made our way to the Hell's Kitchen District. I was pretty excited to visit Hell's Kitchen as practically all my knowledge about it came from reading and watching the Daredevil comic series. Netflix's take on the show was also based in Hell's Kitchen.
&lt;br&gt;
&lt;br&gt;
We visited a couple of bars in the area and chomped on some really good food and drinks. It was a Friday night and every place was packed. We had a really great time and I was too preoccupied to keep track of the places we were visiting. Perhaps, the next time I visit the area, I'll make a list. I have to credit &lt;i&gt;Siddharth&lt;/i&gt; for that group photo with all the happy faces. Thanks Siddharth!&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;hr /&gt;
&lt;/section&gt;
&lt;section style=&quot;text-align: left&quot;&gt;
&lt;h3&gt;Washington Square Park, Flatiron, Empire State&lt;/h3&gt;
&lt;p&gt;
	&lt;div class=&quot;box alt&quot;&gt;
		&lt;div class=&quot;row uniform 100%&quot;&gt;
			&lt;div class=&quot;4u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/wsp.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;4u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/flatiron.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;4u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/empire.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
		&lt;/div&gt;
		&lt;br&gt;
	&lt;/div&gt;
The next day, it was Christmas Eve. After gorging on some authentic desi food in Journal Square, NJ, Sripathi decided he'll show us around NYU. We went and explored the Greenwich Village area. Incidentally, the &lt;b&gt;F.R.I.E.N.D.S&lt;/b&gt; apartment is located right here! Some of the places we visited include Washington Square Park, the Flatiron Building (&lt;i&gt;which I think was the inspiration for Gringotts in Harry Potter&lt;/i&gt;) and we even had a glimpse of the Empire State Building!
&lt;/p&gt;
&lt;/section&gt;
&lt;section style=&quot;text-align: left&quot;&gt;
&lt;h3&gt;Bryant Park, NIT-T Reunion&lt;/h3&gt;
&lt;p&gt;
	&lt;span class=&quot;image left&quot;&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/bryant.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
		&lt;br&gt;
		&lt;a class=&quot;fancybox&quot;&gt;&lt;img src=&quot;/images/nyc/seniors.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;&gt;&lt;/a&gt;
	&lt;/span&gt;
In Singapore, they do have some extravagant decorations for Christmas. Especially, the Orchard Road and Marina Bay areas. But although they look amazing and really beautiful, I think that the lack of cold and snow makes it loose the &lt;i&gt;l'authentique&lt;/i&gt; vibes. This tree in Bryant Park was probably the best I'd seen in all my time in NYC. To make it even better, there was very slight precipitation on that day so it looked even more perfect. 
&lt;br&gt;
&lt;br&gt;
Of course, it was also bone-chillingly cold, what with temperatures running into negative teens. Again, there was an ice-skating rink right next to it and as expected, it was packed and the queue was for probably an hour long. We picked up some hot-cocoa and decided to walk along back to Grand Central.
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
In the afternoon, we had a mini reunion of sorts where we met our fellow NIT-Trichy alumni in NYC! It was really nice getting to know all of them and listening to their experiences and stories post graduation from Trichy. Who would have ever thought that I'd bump into so many alums all the way here in NYC. We had a great time talking about all the hostel scenes that went down back in college :P. All in all, it was a great way to spend Christmas IMO.
&lt;br&gt;
&lt;br&gt;
&lt;hr /&gt;
&lt;/p&gt;
&lt;/section&gt;
&lt;section style=&quot;text-align: left&quot;&gt;
&lt;h3&gt;NYSE and WTC&lt;/h3&gt;
&lt;p&gt;
	&lt;div class=&quot;box alt&quot;&gt;
		&lt;div class=&quot;row uniform 100%&quot;&gt;
			&lt;div class=&quot;6u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/nyse.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;6u&quot;&gt;&lt;span class=&quot;image fit&quot;&gt;&lt;img src=&quot;/images/nyc/wtc.jpg&quot; alt=&quot;&quot; style=&quot;border: solid 2px #000000;&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
		&lt;/div&gt;
		&lt;br&gt;
	&lt;/div&gt;
I had an opportunity to walk down Wall Street. I might have imagined it entirely, but I could almost smell freshly minted cash :P. There really is a certain charm to all those white pillars and Greco-Roman inspired architecture. You could also get the vibes that this place was hallowed ground and has stood witness to countless important events over the centuries. I would have loved to take a peek inside the NYSE but unfortunately they were closed to tourists (I think it was Sunday when I went there).
&lt;br&gt;
&lt;br&gt;
I took a slight detour from Wall Street and decided to go visit the WTC Memorial and the new One World Trade Center. In my opinion, the memorial was really beautiful and a great place to reflect and introspect. To see something like this spring from a place of tragedy just goes to speak about the resilience of the human spirit. Where even in great sorrow, hope can still prevail and shine bright like a beacon.
&lt;br&gt;
&lt;br&gt;
I'll close this first blog post here. Hopefully, this is something I can maintain on a regular basis and come up with more content. Its been a long time since I've put a pen to the paper and written something that isn't going to be graded. Honestly, it felt good coming up with this post. Cheers! :)
&lt;hr /&gt;
&lt;/section&gt;
&lt;section style=&quot;text-align: center&quot;&gt;
&lt;p&gt;Shoot me feedback and comments regarding my blog post on the contact section of my website! I'm always happy to hear feedback! :)&lt;/p&gt;
&lt;/section&gt;
</description>
        <pubDate>Thu, 22 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/topics/NewYork.html</link>
        <guid isPermaLink="true">http://localhost:4000/topics/NewYork.html</guid>
        
        <category>featured</category>
        
        
        <category>topics</category>
        
      </item>
    
      <item>
        <title>Boston Crime</title>
        <description>&lt;h2 id=&quot;crime-statistics-description&quot;&gt;Crime Statistics Description&lt;/h2&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;Analysed the crime data provided by [https://data.boston.gov/dataset/crime-incident-reports-august-2015-to-date-source-new-system](https://data.boston.gov/dataset/crime-incident-reports-august-2015-to-date-source-new-system) to visualise and identify crime hotspots.
I first generated a crime heatmap based on reported locations of crime. 
Then, I thought it would be interesting to see the change in crime over a period of two years. 
I analysed the crime data, grouped it by district to actually see pct change in crime across two years.&lt;/div&gt;

&lt;p&gt;The dataset for 2016-17 has 91561 variables. I’m using a February to February year cycle.&lt;/p&gt;

&lt;p&gt;Likewise, the dataset 2017-18 has 92041 variables.&lt;/p&gt;

&lt;h2 id=&quot;packages-required&quot;&gt;Packages Required&lt;/h2&gt;

&lt;p&gt;plyr, ggmap, ggplot2, lubridate ; all downloadable from CRAN&lt;/p&gt;

&lt;h3 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;R and R Studio&lt;/p&gt;

&lt;h2 id=&quot;dataset-description&quot;&gt;Dataset Description&lt;/h2&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;Data is available from the city of Boston data repositories. Crime incident reports are provided by Boston Police Department (BPD) to document the initial details surrounding an incident to which BPD officers respond. This is a dataset containing records from the new crime incident report system, which includes a reduced set of fields focused on capturing the type of incident as well as when and where it occurred. Records in the new system begin in June of 2015.&lt;/div&gt;

&lt;p&gt;Last Update of Dataset 02/04/2018&lt;/p&gt;

&lt;p&gt;Data Provided under Open Data Commons Public Domain Dedication and License (PDDL).&lt;/p&gt;

&lt;p&gt;Simple complete case matching is done to remove any empty variables. Data is split into two chunks 2016-17 and 2017-18.&lt;/p&gt;

&lt;h2 id=&quot;crime-density-map&quot;&gt;Crime Density Map&lt;/h2&gt;

&lt;p&gt;First I went about with the geospatial visualisation. I utilised the ggmap library to pull a roadmap from Google Maps. This was later overlaid with multiple grammar of graphics layers for density gradient and more. Here’s a code snippet.&lt;/p&gt;

&lt;div class=&quot;language-r highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;interestedregion&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bostonmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#Create the density plots for crime regions. Bin size is responsible for resolution&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stat_density2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastyear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastyear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastyear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;..level..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;..level..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'polygon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#Crime Density scale in range of dark magenta to orange to denote intensity. Use any color combination that makes sense&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scale_fill_gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Crime\nDensity'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'darkmagenta'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gold'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#Populate map with the density color scheme&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scale_alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guide&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guide_colorbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barwidth&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barheight&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#Remove the axes titles long and lat&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis.title.y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element_blank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis.title.x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element_blank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Boston Crime February 2017 - February 2018&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/36330214-d1dc9344-1336-11e8-9b17-cb1a66cdea23.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This map shows the crime density in Boston for a period of one year from February 2017 to February 2018.&lt;/p&gt;

&lt;h2 id=&quot;crime-statistics-districtwise&quot;&gt;Crime Statistics Districtwise&lt;/h2&gt;

&lt;p&gt;Next, I tackled simple statistics on the crime data and utilised barplot modeling on the frequency of crimes committed districtwise.
A minimalisitic theme is applied to make the barplots look nice. Here’s the function I wrote to extract barplots.&lt;/p&gt;
&lt;div class=&quot;language-r highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plotter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#Plot the Barplot for the table created.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plotout&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;District&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;District&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geom_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;identity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#applies a minimalistic theme&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theme_minimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plotout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;First we generate a plot for the 16-17 year&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/36330202-c209c126-1336-11e8-81ac-41a0234bc28b.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then we do the same for the 17-18 year.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/36330213-d1d155a6-1336-11e8-8536-bf77e99450e5.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we can compare the percentage change between the two years and find out how much incidents of crime have changed&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/36330215-d1e90052-1336-11e8-8052-07571a413c82.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;future&quot;&gt;Future&lt;/h2&gt;

&lt;p&gt;Will be working on a neural network to predict hotspots for the upcoming months. Will be interesting to see if that actually happens IRL. Leave your comments or feel free to contact me with suggestions.&lt;/p&gt;

&lt;h2 id=&quot;codebase-and-license&quot;&gt;Codebase and License&lt;/h2&gt;

&lt;p&gt;Here’s the full github repo for &lt;a href=&quot;https://github.com/niki864/BostonCrime&quot;&gt;this project&lt;/a&gt;. This project is licensed under the MIT License - see the &lt;em&gt;LICENSE.md&lt;/em&gt; file located in my github repo for more details.&lt;/p&gt;

&lt;h2 id=&quot;acknowledgments&quot;&gt;Acknowledgments&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;R Core Team (2013). R: A language and environment for statistical
  computing. R Foundation for Statistical Computing, Vienna, Austria.
  URL http://www.R-project.org/.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;R Packages used : Plyr, ggmap, ggplot2, lubridate&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 23 Feb 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/works/works-bostoncrime.html</link>
        <guid isPermaLink="true">http://localhost:4000/works/works-bostoncrime.html</guid>
        
        <category>RStudio</category>
        
        <category>ggplot</category>
        
        <category>ggmap</category>
        
        <category>lubridate</category>
        
        <category>dplyr</category>
        
        
        <category>works</category>
        
      </item>
    
      <item>
        <title>Volatility Analysis of Bitcoin</title>
        <description>&lt;p&gt;A technical analysis of bitcoin price history over a period of one year done in the R language utilising the TTR package. This project was done in conjunction with the course IE 6200 : Probability and Statistics for Engineers @ Northeastern University.&lt;/p&gt;

&lt;h2 id=&quot;packages-required&quot;&gt;Packages Required&lt;/h2&gt;

&lt;p&gt;TTR, downloadable from CRAN&lt;/p&gt;

&lt;h3 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;R and R Studio&lt;/p&gt;

&lt;h2 id=&quot;base-dataset-description&quot;&gt;Base Dataset Description&lt;/h2&gt;

&lt;p&gt;Dataset is an hourly time series data set with 8 Variables (Timestamp, Open, High, Low, Close, Volume (BTC), Volume (Currency), Weighted Price)
Data gathered is averaged across six hour time interval between sampling, i.e. 0000-0600 hrs, 0600-1200 hrs, 1200-1800 hrs to 1800-2400 hrs.&lt;/p&gt;

&lt;p&gt;Base descriptive stats are provided.&lt;/p&gt;

&lt;p&gt;Source: &lt;em&gt;bitcoincharts.com&lt;/em&gt;(https://bitcoincharts.com)&lt;/p&gt;

&lt;h2 id=&quot;data-analysis-description&quot;&gt;Data Analysis Description&lt;/h2&gt;

&lt;p&gt;We first generate Bollinger Bands with a SMA of 28 samples ( 28/4 - Weekly Moving Average equivalent) and obtain pctB values. 
pctB is the percentage of Bitcoin price to the range between the up and lower band. 
&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37727316-e5c0a436-2d0d-11e8-8239-81f3aae6d6f7.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a measure called pctB. This basically charts the degree of volatility between the current price and the moving average. Using pctB we can scale it to an index measure by taking the absolute value and converting it into percentage points on scale 100.
&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37727315-e5b2d374-2d0d-11e8-8096-2d396a19a25d.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The final graph is generated on the basis of a volatility index, I’ll call it Vindex. This shows the days in the year where volatility has been excessive. We can infer that on these days, the price has exhibited massive change.
&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37727313-e5007a3a-2d0d-11e8-80a1-85a5cab27129.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Spikes in graph correlate to significant days in which volatility has exceeded moving average by a large margin.&lt;/p&gt;

&lt;h2 id=&quot;codebase-and-license&quot;&gt;Codebase and License&lt;/h2&gt;

&lt;p&gt;Here’s the full github repo for &lt;a href=&quot;https://github.com/niki864/VolatilityAnalysisBitcoin&quot;&gt;this project&lt;/a&gt;. This project is licensed under the MIT License - see the &lt;em&gt;LICENSE.md&lt;/em&gt; file in the repo for more details.&lt;/p&gt;

&lt;h2 id=&quot;acknowledgments&quot;&gt;Acknowledgments&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;IE 6200 :Probability and Statistics Course @Northeastern University : Prof. Dehghani&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback&lt;/h2&gt;

&lt;p&gt;Contact me for any feedback regarding this project. Always eager to hear from fellow data enthusiasts.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Dec 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/works/works-CryptoVolatilityAnalysis.html</link>
        <guid isPermaLink="true">http://localhost:4000/works/works-CryptoVolatilityAnalysis.html</guid>
        
        <category>RStudio</category>
        
        <category>TTR</category>
        
        <category>ggplot2</category>
        
        
        <category>works</category>
        
      </item>
    
      <item>
        <title>Sentiment Analysis of Cryptocurrency Tweets</title>
        <description>&lt;h2 id=&quot;sentiment-analysis-of-tweets-related-to-cryptocurrencies&quot;&gt;Sentiment Analysis of Tweets Related to Cryptocurrencies&lt;/h2&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;I built a simple sentiment analyser that pulls tweets from Twitter and assigns it a sentiment score. Created this during the crypto hype of 2017 Aug-Dec where volatility was excessive and nearly everyone on social media became a self professed cryptocurrency expert. I thought it might be interesting to see what it is that they are actually saying (and hopefully make use of that for my personal portfolio :P) &lt;/div&gt;

&lt;h2 id=&quot;packages-required&quot;&gt;Packages Required&lt;/h2&gt;

&lt;p&gt;TwitteR, plyr, stringr, ggplot2, downloadable from CRAN&lt;/p&gt;

&lt;h3 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;R and R Studio&lt;/p&gt;

&lt;h2 id=&quot;dataset-description&quot;&gt;Dataset Description&lt;/h2&gt;

&lt;p&gt;All of this data is aggregated from Twitter using the TwitteR search api call. 
Here we search for the term “#Cryptocurrency” and look for the most recent 1500 tweets.(Unfortunately, that is Twitter’s max. free limit)
This is raw tweet data as provided by the returned Json file.&lt;/p&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;After aggregating this data, data cleaning is done to remove repeat tweets, unnecessary characters, numbers, non-english words, twitter symbols like @ RT and # to get raw text of tweets. That removes around 35-40% of the data. So we effectively have around 800-900 tweets to work with.
I used simple Regex rules based matching to clean data.&lt;/div&gt;

&lt;h2 id=&quot;sentiment-analyser-description&quot;&gt;Sentiment Analyser Description&lt;/h2&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;This is a simple analyser function that increments or decrements points to a sentence based on words in the sentence that are matched to a positive or negative word list. It's not a very elegant implementation but it gets the job done.&lt;/div&gt;

&lt;p&gt;This follows the tutorial at http://jeffreybreen.wordpress.com/2011/07/04/twitter-text-mining-r-slides/&lt;/p&gt;

&lt;p&gt;The scores are then stored and used to generate graph plots based on sentiment score.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Here ares some histogram models generated using ggplot based on the sentiment score of the overall dataset.
&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/34191361-5422d620-e514-11e7-9681-c36ce0085d80.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After which, I applied the same logic for the search term #Bitcoin alone
Then we do the same for the term Bitcoin alone.
&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/34191362-5443caf6-e514-11e7-93a0-4ac6148bfa59.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Likewise for Ethereum
&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/34191363-5466418a-e514-11e7-95d3-33919e847b8c.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Likewise for Litecoin
&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/34191364-5499741a-e514-11e7-8c90-c5fe4be3f759.jpeg&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback&lt;/h2&gt;

&lt;p&gt;Contact me for any feedback regarding this project. Always eager to hear from fellow data enthusiasts.&lt;/p&gt;

&lt;h2 id=&quot;codebase-and-license&quot;&gt;Codebase and License&lt;/h2&gt;

&lt;p&gt;Here’s the full github repo for &lt;a href=&quot;https://github.com/niki864/CryptoTweetSentiment&quot;&gt;this project&lt;/a&gt;. This project is licensed under the MIT License - see the &lt;em&gt;LICENSE.md&lt;/em&gt; file in the repo for more details.&lt;/p&gt;

&lt;h2 id=&quot;acknowledgments&quot;&gt;Acknowledgments&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/benmarwick/AAA2011-Tweets&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 19 Dec 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/works/works-CryptoTweetSentimentAnalysis.html</link>
        <guid isPermaLink="true">http://localhost:4000/works/works-CryptoTweetSentimentAnalysis.html</guid>
        
        <category>RStudio</category>
        
        <category>TwitteR</category>
        
        <category>Plyr</category>
        
        <category>ggplot2</category>
        
        
        <category>works</category>
        
      </item>
    
      <item>
        <title>NIT - Trichy Thesis Template</title>
        <description>&lt;h2 id=&quot;thesis-template&quot;&gt;Thesis Template&lt;/h2&gt;

&lt;p&gt;B.Tech Thesis Template for NIT-Trichy students&lt;/p&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;So I created this thesis template in LaTeX as I thought formatting in Word was such a pain. Besides, LaTeX allowed me to just focus on the content and not bother about the formatting as it was all pre-defined rules. This template was created for the use of B.Tech students at the National Institute of Technology - Tiruchirappalli. I think the code is well commented and ensures that a person new to Latex will be able to modify it to suit their needs. It follows the latest thesis guidelines as specified for 2016-2017. I appreciate any comments and feedback regarding this.&lt;/div&gt;

&lt;h2 id=&quot;instructions&quot;&gt;Instructions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;If you’re new to latex start off with main.tex and follow the comments.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.overleaf.com/latex/templates/nit-trichy-btech-thesis-template/cywtdmqjjmgr&quot;&gt;This&lt;/a&gt; is the overleaf link if you want to edit it online. I recommend overleaf as they have side-by-side viewer which shows you what’s going on in real time. Currently my template is tracking over 1500 views!!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;

&lt;p&gt;Here are some features of this LaTeX template.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Table of Contents autofills.&lt;/li&gt;
  &lt;li&gt;Images and tables are tracked and List of figures and tables autofills.&lt;/li&gt;
  &lt;li&gt;Code can be added with syntax highlighting.&lt;/li&gt;
  &lt;li&gt;Reference section included.&lt;/li&gt;
  &lt;li&gt;Follows the thesis guidelines given by NITT like font size and spacing.&lt;/li&gt;
  &lt;li&gt;Complex equations can be added easily with numbering.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;

&lt;p&gt;Here’s how a few sample pages look like.&lt;/p&gt;

&lt;h3 id=&quot;cover-page&quot;&gt;Cover Page&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37625799-bb214476-2ba3-11e8-9150-486c4a1d7bc9.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sample-of-how-equations-are-fomatted&quot;&gt;Sample of How Equations Are Fomatted&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37625800-bb2d2ffc-2ba3-11e8-9005-1f94a679f37c.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sample-of-embedding-images&quot;&gt;Sample of Embedding Images&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/10093954/37625801-bb3d2df8-2ba3-11e8-8d50-c0f131b8948c.png&quot; alt=&quot;Drawing&quot; style=&quot;width:100%;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;future&quot;&gt;Future&lt;/h2&gt;

&lt;p&gt;If you would like to build on this (in case college changes the template rubric) go ahead and clone this &lt;a href=&quot;https://github.com/niki864/ThesisTemplate&quot;&gt;repo&lt;/a&gt; and make your changes.&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;This project is licensed under the MIT License - see the &lt;em&gt;LICENSE.md&lt;/em&gt; file in my repo for more details.&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/works/works-NITTrichyTemplate.html</link>
        <guid isPermaLink="true">http://localhost:4000/works/works-NITTrichyTemplate.html</guid>
        
        <category>LaTeX</category>
        
        <category>XML</category>
        
        
        <category>works</category>
        
      </item>
    
  </channel>
</rss>
